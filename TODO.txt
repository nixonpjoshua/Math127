TODO Code:

1) Get Kimura Models going
2) Decide what to do data analysis

TODO Not Code:

0) Get the write up looking nice
1) Does NJ get the interior nodes correct?
2) Are the different ways to calculate mutate, logically equivalent? 

#############################################
# NOTE: Dynerman Outline Email is Below     #
#############################################




















































Math 127 Project 1: Phylogenetics

The goal of this project is to understand and implement the neighbor
joining algorithm for phylogenetic inference.

We will discuss the neighbor joining algorithm in detail during the
week of Feb 1. You can get a preview for the algorithm by reading
sections 5.1-5.3 of Allman and Rhodes (available on bCourses).

Your final project submission will consist of a PDF document that
clearly describes the problem and your solution.

This final write up should be self-contained and something you can
show your peers to give them a clear understanding of what you
accomplished.

At minimum, the write-up should contain:

1. Introduction to the problem
   - Clearly describe the motivation for your work. What biological
     problem are you trying to solve?
2. Translation to the mathematical model
   - Introduce the mathematical model for evolution that you will
     use in your project. Describe any simplifying assumptions and
     briefly comment on how important they are.
3. Statement of problem
   - Now that you've introduced the biological problem and the
     mathematical model, re-state the problem you're trying to
     solve as a clear, precise mathematical statement.
4. How you solve the problem
   - Describe how you will solve the problem
   - Reference source code here
5. Results
   - Evaluate how your solution ended up working

Your write-up does not need to be long, but it needs to be clear. You
should use many figures to give examples and clarify ideas as you
write.

Deliverables:

1. End of week one (Feb 7)
   1. Outline for project write-up
   2. Brief design document for the neighbor joining algorithm: what
      is the input? what is the output? how will you store the data
      for the algorithm? how will you show the output - print text?
      display a visual tree? which software tools will you use?
   3. Implement a function mutate(A, t, seq) that simulates t
      mutations of seq given by the Markov model specified by A.
   4. Please submit written solutions to problems 4.4.3 and 4.4.4 from
      Allman and Rhodes
   5. Comment on deliverable schedule - is it doable? Do you want to
      add topics? Remove topics?
2. End of week two (Feb 14)
   1. First draft of the first third of your write-up
   2. Prototype code for the neighbor joining algorithm, working on a
      small test input set
   3. Use mutate() to simulate evolution according to Jukes Cantor on
      a suitable starting sequence. Compute the Jukes Cantor distance
      between the final sequence and the initial sequence, and compare
      to the actual distance. How does varying the parameters
      (Jukes-Cantor parameter and time) effect this?
   4. Please submit a written solution to problem 4.5.12
3. End of week three (Feb 21)
   1. First draft of the second third of your write-up
   2. Final code for the neighbor joining algorithm, working on
      reasonable test input sets and creating readable output.
   3. Please write-up solutions to problems 5.1.3 and 5.1.7
   4. Extend mutate() to construct a phylogenetic tree as it simulates
      mutations
4. End of week four (Feb 28)
   1. First draft of project write-up complete
   2. Construct a phylogenetic tree from the HIV dataset. Discuss how
      your tree answers whether the dentist infected his patients, and
      compare with the results in Ou et. al.
   3. Generate a benchmark set of phylogenetic trees using your
      mutate() function, and then run your neighbor joining
      algorithm. Compare the results.
5. End of week five (Mar 6)
   1. Make final preparations for demo night presentation

Demo Night: Thurs Mar 10
	

